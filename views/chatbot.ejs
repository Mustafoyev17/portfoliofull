<!DOCTYPE html>
<html lang="uz">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="E-icon.png" rel="shortcut icon" type="image/x-icon" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css">
    <link rel="stylesheet" href="https://rawgit.com/Jesus-E-Rodriguez/cityscapes-landing-page/master/css/styles.css">
    <link rel="stylesheet" href="https://necolas.github.io/normalize.css/8.0.1/normalize.css">
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script defer src="https://rawgit.com/Jesus-E-Rodriguez/cityscapes-landing-page/master/js/astonish.js"></script>
    <script defer src="https://rawgit.com/Jesus-E-Rodriguez/cityscapes-landing-page/master/js/menu.js"></script>
    <script defer src="https://rawgit.com/Jesus-E-Rodriguez/cityscapes-landing-page/master/js/nav.js"></script>
    <script defer src="https://rawgit.com/Jesus-E-Rodriguez/cityscapes-landing-page/master/js/scroll.js"></script>
  <title>Chatbot</title>
  <style>

    :root {
      --bg-color: #ffffff;
      --text-color: #000000;
      --chatgptextcolor: #222;
      --everest-color: #222;
      --evolution-color: rgb(255, 150, 0);
      --button-color: rgb(255, 150, 0);
      --card-bg: #f1f1f1;
      --border-color: #ccc;
      --card-shadow: rgb(0, 0, 0, 0.1);
    }

    [data-theme="dark"] {
      --bg-color: #1b1b1b;
      --text-color: #ffffff;
      --chatgptextcolor: rgb(255, 150, 0);
      --everest-color: rgb(255, 150, 0);
      --evolution-color: #fff;
      --button-color: #fff;
      --navlink-color: #f2f2f2;
      --card-bg: #1f1f1f;
      --border-color: #444; 
      --color-black: white;
      --card-shadow: rgb(200, 200, 200, 0.1);
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      overflow-y: auto;
      margin: 0;
      padding: 20px;
      background-color: var(--bg-color);
      color: var(--text-color);
      transition: background 0.3s, color 0.3s;
    }

    .CHATGPTtext {
      font-family: cursive;
      color: var(--chatgptextcolor);
    }

#chat-history {
  margin-bottom: 180px;
  overflow-y: auto;
}


.chat-input-wrapper {
  width: 100%;
  height: 12%;
  position: fixed;
  padding: 10px 20px;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 10px;
  z-index: 9;
}

.chatmsg,
.chatmsg textarea {
  width: 100%;
}

.chatmsg {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
}

.chatmsg textarea {
  flex: 1;
  min-height: 40px;
  resize: none;
  border-radius: 8px;
  padding: 10px;
  border: none;
  background-color: var(--card-bg);
  color: var(--text-color);
}

.main-nav{
  background-color: var(--bg-color);
  position: fixed;
  top: 0;
  left: 0;
}

.chatmsg button,
.clear-button {
  background-color: var(--button-color);
  color: var(--card-bg);
  border: none;
  padding: 12px 16px;
  border-radius: 8px;
  cursor: pointer;
  font-weight: bold;
}

.clear-button {
  width: 100%;
}


    .everest {
      color: var(--everest-color);
    }

    .evolution {
      color: var(--evolution-color);
    }

    .theme-toggle {
      position: fixed;
      top: 12px;
      right: 20px;
      background: none;
      border: none;
      cursor: pointer;
    }

    .theme-toggle svg {
      width: 30px;
      height: 30px;
      fill: var(--text-color);
    }

    h1 {
      margin-top: 120px;
      text-align: center;
    }

    form {
      max-width: 750px;
      margin: 0 auto 20px;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    textarea {
      padding: 10px;
      border: none;
      border-radius: 8px;
      background: var(--card-bg);
      box-shadow: 0 4px 8px var(--card-shadow);
      color: var(--text-color);
      resize: none;
      font-size: 16px;
    }

    button {
      padding: 12px;
      border: none;
      background-color: var(--button-color);
      color: var(--card-bg);
      border-radius: 8px;
      font-size: 16px;
      cursor: pointer;
    }

    .ai-response {
      max-width: 750px;
      margin: 100px auto;
      padding-top: -150px;
      padding: 20px;
      background: var(--card-bg);
      border-radius: 12px;
      box-shadow: 0 4px 8px var(--card-shadow);
      border: none;
    }

    @media (max-width: 750px) {
      
    .theme-toggle {
      position: fixed;
      top: 84px;
      right: 28px;
      background: none;
      border: none;
      cursor: pointer;
    }

    .clear-button {
      width: 68%;
      padding: 12px 0px;
      margin-left: 64px;
    }
    }

  </style>
</head>
<script>
  
  function scrollToBottom() {
    const chatHistory = document.getElementById('chat-history');
    chatHistory.scrollTop = chatHistory.scrollHeight;
  }

  window.onload = scrollToBottom;
</script>

<body class="body" id="body">

    <nav class="main-nav" id="main-nav">
        <div class="content-wrapper-sm">
         <a href="/chatbot" class="navbar-brand"><span class="everest">EVEREST </span><span class="evolution">EVOLUTION</span> <span class="everest">CHATBOT</span></a>
         <div id="menu-button">
          <div class="bar1" style="background-color: var(--text-color)"></div>
          <div class="bar2" style="background-color: var(--text-color)"></div>
          <div class="bar3" style="background-color: var(--text-color)"></div>
         </div>
         <ul class="nav-links">
          <li><a style="color: rgb(255, 150, 0); font-family: bold;" href="/home">HOME</a></li>
          <li><a style="color: rgb(255, 150, 0); font-family: bold;" href="/career">CAREERS</a></li>
          <li><a style="color: rgb(255, 150, 0); font-family: bold;" href="/portfolio">PORTFOLIO</a></li>
          <li><a style="color: rgb(255, 150, 0); font-family: bold;" href="/glovery">GLOVERY</a></li>

  <form action="/clear-chat" method="POST">
    <button type="submit" class="clear-button">Clean chat</button>
  </form>

<button class="theme-toggle" onclick="toggleTheme()" title="">

<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="64" height="64" fill="rgb(255,150,0)">
  <circle cx="32" cy="32" r="12" fill="rgb(255,150,0)"/>
  <line x1="32" y1="4" x2="32" y2="16" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="32" y1="48" x2="32" y2="60" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="4" y1="32" x2="16" y2="32" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="48" y1="32" x2="60" y2="32" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="12.22" y1="12.22" x2="20.48" y2="20.48" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="43.52" y1="43.52" x2="51.78" y2="51.78" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="12.22" y1="51.78" x2="20.48" y2="43.52" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
  <line x1="43.52" y1="20.48" x2="51.78" y2="12.22" stroke="rgb(255,150,0)" stroke-width="4" stroke-linecap="round"/>
</svg>

</button>
         </ul>
        </div>
       </nav>

  <h1 class="CHATGPTtext">Chatting with Eâ€¢E Gpt</h1>

<div class="ai-response" id="chat-history" style="display: flex; justify-content: center; align-items: center; flex-direction: column; max-width: 750px;">
<% if (messages && messages.length > 0) { %>
  <% messages.forEach((msg, index) => { %>
    <div class="chat-message" style="margin-bottom: 10px; background: var(--card-bg); padding: 15px; border-radius: 8px; box-shadow: 0 4px 8px var(--card-shadow); width: 100%;">
      <p><strong>ðŸ‘¤</strong> <%= msg.user %></p><br>
      <p><strong>ðŸ¤–</strong>
        <% if (index === messages.length - 1) { %>
          <span class="typing-text" data-text="<%= msg.ai %>"></span>
        <% } else { %>
          <%= msg.ai %>
        <% } %>
      </p>
    </div>
  <% }) %>
<% } %>

</div>

<!-- CHAT FORM WRAPPER START -->
<div class="chat-input-wrapper">
  <form class="chatmsg" id="chat-form" action="/ask-chat" method="POST">
    <textarea id="userMessage" name="userMessage" placeholder="Write message..." required></textarea>
    <button type="submit">Send</button>
  </form>
</div>

  <script>

  document.addEventListener('DOMContentLoaded', () => {
    const typingSpan = document.querySelector('.typing-text');
    if (!typingSpan) return;

    const fullText = typingSpan.getAttribute('data-text');
    typingSpan.textContent = '';

    let index = 0;

    function type() {
      if (index < fullText.length) {
        typingSpan.textContent += fullText.charAt(index);
        index++;
        setTimeout(type, 6);
      }
    }

    type();
  });

  const form = document.getElementById('chat-history'); // form ID
  const textarea = document.getElementById('userMessage');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Fetch orqali ma'lumot yuborish
    const message = textarea.value.trim();
    if (!message) return;

    try {
      await fetch('/chatbot', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams({ message }),
      });

      textarea.value = '';
      textarea.style.height = '40px'; // reset height

      scrollToBottom(); // eng pastga tush

      // Sahifani qayta yuklab olingan holda chatlarni koâ€˜rsatish uchun
      location.reload();

    } catch (err) {
      console.error('Xabar yuborishda xatolik:', err);
    }
  });

  // Scroll pastga funksiyasi
  function scrollToBottom() {
    window.scrollTo(0, document.body.scrollHeight);
  }

  // Sahifa yuklanganda avtomatik pastga tushirish
  window.onload = scrollToBottom;

    textarea.addEventListener('keydown', function(event) {
      if (event.key === 'Enter' && !event.shiftKey) {
        event.preventDefault();
        form.submit();
      }
    });

  // Theme logic
  function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
    const icon = document.getElementById('theme-icon');
    if (theme === 'dark') {
      icon.innerHTML = ``;
    } else {
      icon.innerHTML = ``;
    }
  }

  function toggleTheme() {
    const current = document.documentElement.getAttribute('data-theme');
    setTheme(current === 'dark' ? 'light' : 'dark');
  }

  // Load theme on first load
  const savedTheme = localStorage.getItem('theme') || 'light';
  setTheme(savedTheme);
  </script>
</body>
</html>